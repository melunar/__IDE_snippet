{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Vue common template": {
		// "scope": "javascript,typescript",
		"prefix": "tarocc",
		"body": [
      "import Taro, {",
      "\tComponent,",
      "\t// showLoading,",
      "\t// showToast,",
      "\t// showModal,",
      "\t// hideLoading",
      "} from '@tarojs/taro'",
      "import {",
      "\tView,",
      "\t// Text,",
      "\t// Block,",
      "\t// Image,",
      "\t// Button,",
      "\t// CoverView,",
      "\t// CoverImage,",
      "\t// ScrollView",
      "} from '@tarojs/components'",
      "import { connect } from '@tarojs/redux'",
      "import './index.scss'",
      "",
      "@connect(({}) => ({",
      "\t//",
      "}))",
      "export default class MyPage extends Component {",
      "\tconstructor (props) {",
      "\t\tsuper(props)",
      "\t\tthis.state = {}",
      "\t}",
      "\t// onload onlunch",
      "\tcomponentWillMount () {",
      "\t\t// console.log('@@ this.$router.params', this.$router.params)",
      "\t\t// const { dispatch } = this.props",
      "\t}",
      "\t// onshow",
      "\tcomponentDidShow () {}",
      "\t// function",
      "\tmyHandler () {}",
      "\t// pageConfig",
      "\t// config = {",
      "\t\t//   // navigationStyle: 'custom',",
      "\t\t//   navigationBarTitleText: 'title',",
      "\t\t//   navigationBarTextStyle: 'black',",
      "\t\t//   navigationBarBackgroundColor: '#fff'",
      "\t// }",
      "\t// render",
      "\trender () {",
      "\t\treturn (",
      "\t\t\t<View className>",
      "\t\t\t\t1111",
      "\t\t</View>",
      "\t\t)",
      "\t}",
      "}",
      ""
		],
		"description": "vue文件多属性模板"
	}
}